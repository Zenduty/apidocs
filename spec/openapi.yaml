openapi: 3.0.0
info:
  version: '1.0.0' # Your API version
  title: Zenduty 

  termsOfService: 'https://zenduty.com'
  contact:
    email: vishwa@zenduty.com
  license:
    name: Apache 2.0
  x-logo:
    url: 'http://zenduty.s3.amazonaws.com/media/logos/386_Zenduty_Logo_DA-Thumbnail_03.png'
  description: |
    # Introduction
    
    Zenduty is a cutting edge platform for incident management. With high level automation, Zenduty enables faster and better incident resolution keeping developers first.
      
      
      Javascript Libraries: https://github.com/Zenduty/zenduty-js
      
      Ruby Libraries: https://github.com/Zenduty/zenduty-ruby
      
      Python Libraries: https://github.com/Zenduty/zenduty-python-sdk
      Postman Collection for Zenduty API: https://github.com/Zenduty/zenduty-api-postman.git
    
# A list of tags used by the specification with additional metadata.
# The order of the tags can be used to reflect on their order by the parsing tools.'
tags:
  - name: Teams
    description: Operations about teams
  - name: Members
    description: Operations about team members
  - name: Services
    description: Operations about team services
  - name: Integrations
    description: Operations about service integrations
  - name: Events
    description: Events are a way for applications and services to send alerts to Zenduty
  - name: Incidents
    description: Operations about incidents 
  - name: Escalation Policies
    description: Operations about escalation policies
  - name: Schedules
    description: Operations about schedules
  - name: Roles
    description: Roles are a way of categorization of tasks to handle an Incident.
  - name: Tags
    description: Tags are a way to highlight specifics about an incident.
  - name: Task Templates
    description: A ready to go template to create Tasks for incidents.
  - name: On Call
    description: To view and maintain an On Call schedule
  - name: Priorities
    description: Operation related to team priority
  - name: SLA
    description: Operations related to team SLA policies
  - name: Service Maintenance Mode
    description: Operations related to service maintenance mode.
servers:
  - url: https://www.zenduty.com
    description: ''
    variables: {}

paths:
  /api/account/teams/:
    post:
      summary: Create a Team
      description: This request will create a team.
      operationId: CreateaTeam
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This request will create a team.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Team
            example: "{\n\t\"name\": \"New Team\"\n}"
      tags:
        - Teams
    get:
      summary: Get Teams
      description: This endpoint will get all the operations related to the team.
      operationId: GetTeams
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Teams
  /api/account/teams/{team_id}:
    get:
      summary: Get Team detail by ID
      description: To get the details of the team.
      operationId: GetTeamdetailbyID
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Teams
    patch:
      summary: Update Team
      operationId: UpdateTeam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: Modified Team
            example: "{\n\t\"name\": \"Modified Team\"\n}"
      tags:
        - Teams
  /api/account/teams/{team_id2}/:
    delete:
      summary: Delete a Team
      description: This endpoint will delete the specified team.
      operationId: DeleteaTeam
      parameters:
        - $ref: '#/components/parameters/team_id2'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Teams
  /api/account/teams/{team_id}/services/:
    post:
      summary: Add new Service to a Team
      description: This request lets you add a new Service to a team.
      operationId: AddnewServicetoaTeam
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This request lets you add a new Service to a team.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Service
                collation: 1
                collation_time: 1
                description: This is the description for the Service
                escalation_policy: '{{ep_id}}'
            example: "{\n\t\"name\": \"New Service\",\n\t\"collation\": 1,\n\t\"collation_time\": 1,\n\t\"description\": \"This is the description for the Service\",\n\t\"escalation_policy\": \"{{ep_id}}\"\n}"
      tags:
        - Services
  /api/account/teams/{team_id}/services:
    get:
      summary: Get Services for a team
      description: To get all the services linked to a team.
      operationId: GetServicesforateam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Services
  /api/account/teams/{team_id}/services/{service_id}:
    get:
      summary: Get services by ID
      description: This request will get you the service by its corresponding Service ID
      operationId: GetservicesbyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/service_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Services
  /api/account/teams/{team_id}/services/{service_id}/:
    patch:
      summary: Update Service
      description: This endpoint lets one Update the Service details. In this case, the name of the service will be changed to "Modified Service Name".
      operationId: UpdateService
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint lets one Update the Service details. In this case, the name of the service will be changed to "Modified Service Name".
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Modified Service Name
                collation: 1
                collation_time: 1
                description: This is the modified description for the Service
                escalation_policy: '{{ep_id}}'
            example: "{\n\t\"name\": \"Modified Service Name\",\n\t\"collation\": 1,\n\t\"collation_time\": 1,\n\t\"description\": \"This is the modified description for the Service\",\n\t\"escalation_policy\": \"{{ep_id}}\"\n\n}"
      tags:
        - Services
  /api/account/teams/{team_id}/services/{service_id2}/:
    delete:
      summary: Delete a Service
      description: This request letsone delete a service.
      operationId: DeleteaService
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/service_id2'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Services
  /api/account/teams/{team_id}/services/{service_id}/integrations/:
    post:
      summary: Create Integration
      description: This request will let one create a new Integration for the specific Service.
      operationId: CreateIntegration
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This request will let one create a new Integration for the specific Service.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Integration
                summary: This is the summary for new Integration
                application: '{{app_ref}}'
            example: "{\n\t\"name\": \"New Integration\",\n\t\"summary\": \"This is the summary for new Integration\",\n\t\"application\": \"{{app_ref}}\"\n}"
      tags:
        - Integrations
  /api/account/teams/{team_id}/services/{service_id}/integrations:
    get:
      summary: Get Integrations
      description: This will show all the integrations under the service.
      operationId: GetIntegrations
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Integrations
  /api/account/teams/{team_id}/services/{service_id}/integrations/{integration_id}:
    get:
      summary: Get Integration by ID
      description: This request will get the Integration by integration ID.
      operationId: GetIntegrationbyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
        - $ref: '#/components/parameters/integration_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Integrations
    patch:
      summary: Update Integration
      operationId: UpdateIntegration
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
        - name: integration_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: integration_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: Updated Integration
                summary: This is the summary for updated Integration
                create_incidents_for: 2
                default_urgency: 0
                is_enabled: false
            example: "{\n\t\"name\": \"Updated Integration\",\n\t\"summary\": \"This is the summary for updated Integration\",\n    \"create_incidents_for\": 2,\n    \"default_urgency\": 0,\n    \"is_enabled\": false\n}"
      tags:
        - Integrations
    delete:
      summary: Delete Integration
      operationId: DeleteIntegration
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
        - name: integration_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: integration_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Integrations
  /api/account/teams/{team_id}/services/{service_id}/integrations/{integration_id}/alerts:
    get:
      summary: Get alerts in an integration
      operationId: Getalertsinanintegration
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
        - name: integration_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: integration_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Integrations
  /api/account/teams/{team_id}/members:
    post:
      summary: Create member
      operationId: Createmember
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: |-
                {
                    "user": {{user_id}}
                }
            example: |-
              {
                  "user": {{user_id}}
              }
      tags:
        - Members
    get:
      summary: Get members
      description: This endpoints lets one get all the memebers of a specific team.
      operationId: Getmembers
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Members
  /api/account/teams/{team_id}/members/{member_id}:
    get:
      summary: Get member by ID
      operationId: GetmemberbyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/member_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Members
    patch:
      summary: Update member
      operationId: Updatemember
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: member_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: member_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                role: 1
            example: |-
              {
                  "role": 1
              }
      tags:
        - Members
    delete:
      summary: Delete member
      operationId: Deletemember
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: member_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: member_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Members
  /api/incidents/:
    post:
      summary: Create Incidents
      description: This request will let one create a new incident.
      operationId: CreateIncidents
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This request will let one create a new incident.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                service: '{{service_id}}'
                escalation_policy: '{{ep_id}}'
                user: null
                title: Incident Title
                summary: This is the summary for the incident
            example: "{\n\t\"service\": \"{{service_id}}\",\n\t\"escalation_policy\": \"{{ep_id}}\",\n\t\"user\": null,\n\t\"title\": \"Incident Title\",\n\t\"summary\": \"This is the summary for the incident\"\n}"
      tags:
        - Incidents
  /api/incidents:
    get:
      summary: Get Incidents
      description: This endpoint will give all the incidents for the account.
      operationId: GetIncidents
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Incidents
  /api/incidents/{incident_number}:
    get:
      summary: Get Incident by number
      description: This request will get the specific incident by its Incident number.
      operationId: GetIncidentbynumber
      parameters:
        - $ref: '#/components/parameters/incident_number'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Incidents
  /api/incidents/{incident_number}/alerts:
    get:
      summary: Get Incident Alerts
      description: |
        This request will fetch all the alerts for the specific Incident.
      operationId: GetIncidentAlerts
      parameters:
        - name: incident_number
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: incident_number
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Incidents
  /api/incidents/{incident_number}/note:
    get:
      summary: Get incident Notes
      description: This request will get all the notes for the specific incident.
      operationId: GetincidentNotes
      parameters:
        - name: incident_number
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: incident_number
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Incidents
  /api/incidents/{incident_number}/:
    patch:
      summary: Acknowledge the Incident
      description: This endpoint will let one Acknowledge any valid incident.
      operationId: AcknowledgetheIncident
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: incident_number
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: incident_number
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint will let one Acknowledge any valid incident.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                status: 2
            example: "{\n\t\"status\": 2\n}"
      tags:
        - Incidents
  /api/account/teams/{team_id}/escalation_policies/:
    post:
      summary: Create Escalation Policy
      description: This request lets you create a new Escalation Policy.
      operationId: CreateEscalationPolicy
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This request lets you create a new Escalation Policy.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Escalation Policy
                summary: This is the summary for the new escalation policy
                description: This is the description for the New Escalation Policy
                rules:
                  - delay: 0
                    targets:
                      - target_type: 2
                        target_id: '{{target_id}}'
                    position: 1
                    unique_id: ''
                team: '{{team_id}}'
            example: "{\r\n\t\"name\": \"New Escalation Policy\",\r\n\t\"summary\": \"This is the summary for the new escalation policy\",\r\n\t\"description\": \"This is the description for the New Escalation Policy\",\r\n\t\"rules\": [\r\n            {\r\n                \"delay\": 0,\r\n                \"targets\": [\r\n                    {\r\n                        \"target_type\": 2,\r\n                        \"target_id\": \"{{target_id}}\"\r\n                    }\r\n                ],\r\n                \"position\": 1,\r\n                \"unique_id\": \"\"\r\n            }\r\n        ],\r\n\t\"team\": \"{{team_id}}\"\r\n}"
      tags:
        - Escalation Policies
  /api/account/teams/{team_id}/escalation_policies:
    get:
      summary: Get Escalation Policies
      description: This request will show you the escalation policies for the specified team.
      operationId: GetEscalationPolicies
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Escalation Policies
  /api/account/teams/{team_id}/escalation_policies/{ep_id}:
    get:
      summary: Get Escalation Policy by ID
      description: This request will get the escalation policy by the specific ID of the Escalation Policy.
      operationId: GetEscalationPolicybyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/ep_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Escalation Policies
  /api/account/teams/{team_id}/escalation_policies/{ep_id}/:
    patch:
      summary: Update an Escalation Policy
      description: This request lets one Update and Escalation Policy.
      operationId: UpdateanEscalationPolicy
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: ep_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: ep_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This request lets one Update and Escalation Policy.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Modified Name
                summary: This is the summary for the new escalation policy
                description: This is the description for the New Escalation Policy
                rules:
                  - delay: 0
                    targets:
                      - target_type: 2
                        target_id: '{{target_id}}'
                    position: 1
                    unique_id: ''
                team: '{{team_id}}'
            example: "{\r\n\t\"name\": \"Modified Name\",\r\n\t\"summary\": \"This is the summary for the new escalation policy\",\r\n\t\"description\": \"This is the description for the New Escalation Policy\",\r\n\t\"rules\": [\r\n            {\r\n                \"delay\": 0,\r\n                \"targets\": [\r\n                    {\r\n                        \"target_type\": 2,\r\n                        \"target_id\": \"{{target_id}}\"\r\n                    }\r\n                ],\r\n                \"position\": 1,\r\n                \"unique_id\": \"\"\r\n            }\r\n        ],\r\n\t\"team\": \"{{team_id}}\"\r\n}"
      tags:
        - Escalation Policies
    delete:
      summary: Delete an Escalation Policy
      description: This request to the endpoint letsone delete an Escalation Policy.
      operationId: DeleteanEscalationPolicy
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: ep_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: ep_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Escalation Policies
  /api/account/teams/{team_id}/schedules/:
    post:
      summary: Create a Schedule
      description: This request lets one create new Schedule.
      operationId: CreateaSchedule
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This request lets one create new Schedule.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Schedule
                summary: Summary for the new Schedule
                descripition: This is the description for the new Schedule
                time_zone: Asia/Kolkata
                team: '{{team_id}}'
            example: "{\n\t\"name\": \"New Schedule\",\n\t\"summary\": \"Summary for the new Schedule\",\n\t\"descripition\": \"This is the description for the new Schedule\",\n\t\"time_zone\": \"Asia/Kolkata\",\n\t\"team\": \"{{team_id}}\"\n}"
      tags:
        - Schedules
  /api/account/teams/{team_id}/schedules:
    get:
      summary: Get Schedules
      description: Get all the Schedules for a specific Team
      operationId: GetSchedules
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Schedules
  /api/account/teams/{team_id}/schedules/{schedule_id}:
    get:
      summary: Get Schedule by ID
      description: 'This request will get the Schedule by the specific ID. '
      operationId: GetSchedulebyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/schedule_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Schedules
  /api/account/teams/{team_id}/schedules/{schedule_id}/:
    patch:
      summary: Update a Schedule
      description: This endpoint lets one update the Schedule. Anything in the schedule can be updated. Lets update the name of the Schedule.
      operationId: UpdateaSchedule
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: schedule_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: schedule_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint lets one update the Schedule. Anything in the schedule can be updated. Lets update the name of the Schedule.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Balls
            example: "{\n\t\"name\": \"Balls\"\n}"
      tags:
        - Schedules
  /api/account/teams/{team_id}/schedules/{schedule_id2}/:
    delete:
      summary: Delete a Schedule
      description: This request lets one delete a Schedule for a specific team.
      operationId: DeleteaSchedule
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/schedule_id2'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Schedules
  /api/account/teams/{team_id}/roles/:
    post:
      summary: Create a new Role for a team
      description: This endpoint lets one create a new Role for a specific Team.
      operationId: CreateanewRoleforateam
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint lets one create a new Role for a specific Team.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                title: New Role
                description: This is the description for the new Role
                rank: 5
            example: "{\n\t\"title\": \"New Role\",\n\t\"description\": \"This is the description for the new Role\",\n\t\"rank\": 5\n}"
      tags:
        - Roles
  /api/account/teams/{team_id}/roles:
    get:
      summary: Get Roles for a Team
      description: This request will get all the Roles in a specific team.
      operationId: GetRolesforaTeam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Roles
  /api/account/teams/{team_id}/roles/{role_id}/:
    get:
      summary: Get Role for a Team by ID
      operationId: GetRoleforaTeambyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/role_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Roles
    patch:
      summary: Update a Role
      description: This endpoint will let you update the information of a Role for a specific team. Lets modify the title of the Role to "Modified Role" and the Description to "Modified description".
      operationId: UpdateaRole
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: role_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: role_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint will let you update the information of a Role for a specific team. Lets modify the title of the Role to "Modified Role" and the Description to "Modified description".
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                title: Modified Title
                description: New Modified description
            example: "{\n\t\"title\": \"Modified Title\",\n\t\"description\": \"New Modified description\"\n}"
      tags:
        - Roles
  /api/account/teams/{team_id}/roles/{role_id2}/:
    delete:
      summary: Delete a Role
      description: This request lets one delete a Role a specific Team.
      operationId: DeleteaRole
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/role_id2'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Roles
  /api/account/teams/{team_id}/tags/:
    post:
      summary: Create a new Tag for a Team
      description: This endpoint lets you create a new Tag for a specific team.
      operationId: CreateanewTagforaTeam
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint lets you create a new Tag for a specific team.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Tag
                color: red
            example: "{\n\t\"name\": \"New Tag\",\n\t\"color\": \"red\"\n}"
      tags:
        - Tags
  /api/account/teams/{team_id}/tags:
    get:
      summary: Get tags associated with the team
      description: This request will get all the Roles for a specific team.
      operationId: Gettagsassociatedwiththeteam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Tags
  /api/account/teams/{team_id}/tags/{tag_id2}/:
    delete:
      summary: Delete a Tag
      description: This request lets you delete a Tag.
      operationId: DeleteaTag
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/tag_id2'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Tags
  /api/account/teams/{team_id}/task_templates/:
    post:
      summary: Create a new Task Template for a Team
      description: This endpoint lets you create a Task Template for a specific Team.
      operationId: CreateanewTaskTemplateforaTeam
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint lets you create a Task Template for a specific Team.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Task Template
                summary: This is the summary of the new Task Template
            example: "{\n\t\"name\": \"New Task Template\",\n\t\"summary\": \"This is the summary of the new Task Template\"\n}"
      tags:
        - Task Templates
  /api/account/teams/{team_id}/task_templates:
    get:
      summary: 'Get the Task Templates '
      description: This request will get all the Task Templates for the specific team.
      operationId: GettheTaskTemplates
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Task Templates
  /api/account/teams/{team_id}/task_templates/{task_template_id}/:
    get:
      summary: Get the Task Templates by ID
      operationId: GettheTaskTemplatesbyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/task_template_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Task Templates
    patch:
      summary: Update a Task Template
      description: This endpoint lets you update the Task Template details of a specific team.
      operationId: UpdateaTaskTemplate
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: task_template_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: task_template_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint lets you update the Task Template details of a specific team.
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Modified Name
                summary: Modified summary for the Task Template
            example: "{\n\t\"name\": \"Modified Name\",\n\t\"summary\": \"Modified summary for the Task Template\"\n}"
      tags:
        - Task Templates
    delete:
      summary: Delete a Task Template
      description: This request lets you delete a Task Template for a specific Team.
      operationId: DeleteaTaskTemplate
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: task_template_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: task_template_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Task Templates
  /api/account/teams/{team_id}/oncall:
    get:
      summary: Get details of who is On Call
      description: This request willshow you the on call detais
      operationId: GetdetailsofwhoisOnCall
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - On Call
  /api/events/{integration_key}/:
    post:
      summary: Create an Alert
      description: This endpoint will give you the details of team priority
      operationId: CreateanAlert
      parameters:
        - $ref: '#/components/parameters/integration_key'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: This endpoint will give you the details of team priority
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                message: '[P-21041]Browser monitor global outage'
                summary: 'OPEN Problem P-21041 in environment zfw09965. Problem detected at: 17:58 (UTC) 27.04.2021'
                alert_type: critical
                suppressed: false
                entity_id: INC00123
                payload: '{}'
            example: "{\n\t\"message\": \"[P-21041]Browser monitor global outage\",\n\t\"summary\": \"OPEN Problem P-21041 in environment zfw09965. Problem detected at: 17:58 (UTC) 27.04.2021\",\n\t\"alert_type\": \"critical\",\n\t\"suppressed\": false,\n\t\"entity_id\": \"INC00123\",\n    \"payload\":\"{}\"\n}"
      tags:
        - Events
  /api/account/teams/{team_id}/priority/:
    post:
      summary: Create Priority
      operationId: CreatePriority
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: New Priority
            example: |-
              {
                  "name": "New Priority"
              }
      tags:
        - Priorities
    get:
      summary: Get Priorities
      operationId: GetPriorities
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Priorities
  /api/account/teams/{team_id}/priority/{priority_id}/:
    get:
      summary: Get Priority by ID
      operationId: GetPrioritybyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/priority_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Priorities
    patch:
      summary: Update Priority
      operationId: UpdatePriority
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: priority_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: priority_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: Modified Priority
            example: |-
              {
                  "name": "Modified Priority"
              }
      tags:
        - Priorities
    delete:
      summary: Delete Priority
      operationId: DeletePriority
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: priority_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: priority_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Priorities
  /api/account/teams/{team_id}/sla/:
    post:
      summary: Create SLA for a Team
      operationId: CreateSLAforaTeam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: New SLA
            example: |-
              {
                  "name": "New SLA"
              }
      tags:
        - SLA
    get:
      summary: Get SLA policies for a Team
      operationId: GetSLApoliciesforaTeam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - SLA
  /api/account/teams/{team_id}/sla/{sla_id}/:
    get:
      summary: Get SLA ploicy by ID for a Team
      operationId: GetSLAploicybyIDforaTeam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - $ref: '#/components/parameters/sla_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - SLA
    patch:
      summary: Update SLA policty for a Team
      operationId: UpdateSLApolictyforaTeam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: sla_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: sla_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: Modified SLA
                description: Modified Description
            example: |-
              {
                  "name": "Modified SLA",
                  "description": "Modified Description"
              }
      tags:
        - SLA
    delete:
      summary: Delete SLA policy for a Team
      operationId: DeleteSLApolicyforaTeam
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: sla_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: sla_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - SLA
  /api/account/teams/{team_id}/services/{service_id}/maintenance/:
    post:
      summary: Create Service Maintenance Mode
      operationId: CreateServiceMaintenanceMode
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: |-
                {
                    "name": "New Maintenance",
                    "service": {{service_id}}
                }
            example: |-
              {
                  "name": "New Maintenance",
                  "service": {{service_id}}
              }
      tags:
        - Service Maintenance Mode
    get:
      summary: Get Service Maintenance Modes
      operationId: GetServiceMaintenanceModes
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Service Maintenance Mode
  /api/account/teams/{team_id}/services/{service_id}/maintenance/{maintenance_id}/:
    get:
      summary: Get Service Maintenance Mode by ID
      operationId: GetServiceMaintenanceModebyID
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
        - $ref: '#/components/parameters/maintenance_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Service Maintenance Mode
    patch:
      summary: Update Service Maintenance Mode
      operationId: UpdateServiceMaintenanceMode
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
        - name: maintenance_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: maintenance_id
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: Modified Maintenance
            example: |-
              {
                  "name": "Modified Maintenance"
              }
      tags:
        - Service Maintenance Mode
    delete:
      summary: Delete Service Maintenance Mode
      operationId: DeleteServiceMaintenanceMode
      parameters:
        - name: team_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: team_id
        - name: service_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: service_id
        - name: maintenance_id
          in: path
          required: true
          style: simple
          schema:
            type: string
            example: maintenance_id
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Service Maintenance Mode
components:
  parameters:
    Content-Type:
      name: Content-Type
      in: header
      required: true
      style: simple
      schema:
        type: string
        example: application/json
    team_id:
      name: team_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: team_id
    team_id2:
      name: team_id2
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: team_id2
    service_id:
      name: service_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: service_id
    service_id2:
      name: service_id2
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: service_id2
    integration_id:
      name: integration_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: integration_id
    member_id:
      name: member_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: member_id
    incident_number:
      name: incident_number
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: incident_number
    ep_id:
      name: ep_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: ep_id
    schedule_id:
      name: schedule_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: schedule_id
    schedule_id2:
      name: schedule_id2
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: schedule_id2
    role_id:
      name: role_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: role_id
    role_id2:
      name: role_id2
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: role_id2
    tag_id2:
      name: tag_id2
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: tag_id2
    task_template_id:
      name: task_template_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: task_template_id
    integration_key:
      name: integration_key
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: integration_key
    priority_id:
      name: priority_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: priority_id
    sla_id:
      name: sla_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: sla_id
    maintenance_id:
      name: maintenance_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: maintenance_id
  schemas:
    Email:
      description: User email address
      type: string
      example: john.smith@example.com
    User:
      type: object
      properties:
        username:
          description: System generated username
          type: string
          minLength: 4
          example: John78
        firstName:
          description: User first name
          type: string
          minLength: 1
          example: John
        lastName:
          description: User last name
          type: string
          minLength: 1
          example: Smith
        email:
          $ref: '#/components/schemas/Email'
    Member:
      description: Member in an account
      type: object
      properties:
        unique_id:
          description: Unique ID
          type: string
        time_zone:
          description: Time Zone of account
          type: string
        user:
            $ref: '#/components/schemas/User'
        joining_date:
          description: Joining date
          type: string
          format: date-time
        role:
          type: integer
    Team:
      description: Team in an account
      type: object
      properties:
        unique_id:
          description: ID of team
          type: string
        owner:
          description: Owner of teams
          type: string
        account: 
          description: Account ID
          type: string
        name:
          description: Name of the team
          type: string
        creation_date:
          description: Date of creation
          type: string
          format: date-time
    TeamWMember:
      description: All Team Details
      type: object
      properties:
        team: 
          $ref: '#/components/schemas/Team'
        member:
          $ref: '#/components/schemas/Member'
    NewMember:
      description: New Member in a Team
      type: object
      properties:
        unique_id:
          type: string
        team:
          type: string
        user:
          type: string
        joining_date:
          type: string
          format: date-time
    ServiceInfo:
      description: Information about a service
      type: object
      properties:
        name:
          type: string
          example: "Test Service"
        creation date:
          type: string
          format: date-time
        summary:
          type: string
          example: "Test Summary"
        description:
          type: string
          example: "TS Description"
        unique_id:
          type: string
        auto_resolve_timeout:
          type: integer
        created_by:
          type: string
        acknowlegement_timeout:
          type: integer
        status:
          type: integer
        escalation_policy: 
          type: string
        team:
          type: string
    ApplicationRef:
      description: Details of the app
      type: object 
      properties:
        name:
          type: string
          example: "Sentry"
        icon_url:
          type: string
          example: "www.url.com"
        summary:
          type: string
          example: "Zenduty Sentry App"
        description:
          type: string
          example: "Sentry for Zenduty"
        unique_id:
          type: string
        availability_plan_id:
          type: integer
          example: 1
        setup_instructions:
          type: string
    Integration:
      description: Details of integration
      type: object
      properties:
        name: 
          type: string
          example: "Sentry 2"
        creation_date:
          type: string
          format: date-time
        summary:
          type: string
          example: "Sentry prod 2"
        unique_id:
          type: string
        service:
          type: string
        application: 
          type: string
        application_reference:
          $ref: '#/components/schemas/ApplicationRef'
        integration_key:
          type: string
        created_by:
          type: string
        is_enabled:
          type: boolean
        create_incidents_for:
          type: integer
          example: 2
    Payload:
      description: payload of alert
      type: object
      properties: 
        a:
          type: integer
        b: 
          type: integer
        c: 
          type: integer
    ServiceAlert:
      description: alert from a service
      type: object
      properties:
        integration_name:
          type: string
          example: "Sentry"
        incident:
          type: integer
          example: 37
        creation_date:
          type: string
          format: date-time
        status:
          type: integer
          example: 1
        message: 
          type: string
          example: "Testing Sentry 49"
        integration_id:
          type: string
        suppressed: 
          type: boolean
          default: false
        entity_id:
          type: string
        payload:
          $ref: '#/components/schemas/Payload'
        severity:
          type: integer
          description: 1 for info, 2 for warning, 3 for error, 4 for critical
          example: 4
    AlertList:
      description: List of alerts
      type: object
      properties:
        count:
          type: integer
          example: 15
        next:
          type: string
          format: url
        previous:
          type: string
          format: url
        results:
          $ref: '#/components/schemas/ServiceAlert'
    NewTeamName:
      description: Name of the new team
      type: string
    UserID:
      description: Member details to add to a Team.
      type: object
      properties:
        team_id:
          description:  Unique ID of the team to which the member is to be added
          type: string
        user_id:
          description:  Unique ID of the user which is to added to the team
          type: string
        role_id:
          description:  Unique ID of the role of the user
          type: string
    NewService:
      description: Details of the new service
      type: object
      properties:
        name:
          description: Name of new service
          type: string
        description:
          description: Details of service
          type: string
        acknowledgement_timeout:
          type: integer
        auto_resolve_timeout:
          type: integer
        escalation_policy:
          type: string
        integration_id:
          type: string
    NewIntegration:
      description: Details of the new integration
      type: object
      properties:
        name:
          description: Name of new integration
          type: string
        summary:
          description: Summary of new integration
          type: string
        application:
          description: application ID
          type: string
    Incident:
      description: Details of the incident
      type: object
      properties:
        summary:
          description: Summary of the incident
          type: string
        incident_number:
          description: Service number
          type: integer
          example: 38
        creation_date: 
          description: Date and Time of incident created
          type: string
          format: date-time
        status:
          type: integer
          example: 1
          description: 1 for Open, 2 for Acknowledged, 3 for resolved, 0 for all
        unique_id:
          description: Incident ID
          type: string
        service_object:
          $ref: '#/components/schemas/ServiceInfo'
        title: 
          type: string
          description: Title of the incident
        incident_key:
          type: string
          description: TBC
        priority:
          description: 1 for critical, 2 for high, 3 for moderate, 4 for low
          type: integer
          example: 1
        urgency: 
          description: 1 for high, 0 for low
          type: integer
          example: 1
        merged_with:
          description: Incident number merged with
          type: integer
          example: 50
        assigned_to:
          description: ID of the user assigned to
          type: string
        assigned_to_name:
          description: Name of the assignee
          type: string
          example: John Doe
        resolved_date:
          type: string
          format: date-time
        acknowledged_date:
          type: string
          format: date-time
    IncidentList:
      description: List of incidents
      type: object
      properties:
        count:
          type: integer
          example: 15
        next:
          type: string
          format: url
        previous:
          type: string
          format: url
        results:
          $ref: '#/components/schemas/Incident'
    IncidentNote:
      description: notes for an incident
      type: object
      properties:
        unique_id: 
          type: string
          description: Incident ID
        incident:
          type: integer
          description: Incident Number
          example: 38
        user:
          type: string
          description: User ID of the assignee
        note:
          type: string
          description: Note on the incident
        user_name: 
          type: string
          description: Name of the assignee
    IncidentNoteList:
      type: object
      description: List of notes on an incident
      properties:
        count:
          type: integer
          description: Number of notes
        next:
          type: string
          format: url
        previous:
          type: string
          format: url
        results:
          $ref: '#/components/schemas/IncidentNote'
    EventImage:
      type: object
      description: Image attachments
      properties:
        image_src:
          type: string
        image_url:
          type: string
        image_text:
          type: string
    EventUrl:
      type: object
      description: Link attachments
      properties:
        link_url:
          type: string
        link_text:
          type: string
    EventNote:
      type: object
      description: Notes attachments
      properties:
        note_title:
          type: string
        note_text:
          type: string
    NewEvent:
      type: object
      description: Custom payload for an event
      properties:
        message:
          type: string
          description: This becomes the incident title. This field is required.
        summary:
          type: string
          description: This is the incident summary
        alert_type:
          type: string
          default: info
          description: Choices - critical, acknowledged, resolved, error, warning, info. This field is required.
        suppressed:
          type: boolean
          default: False
          description: True or False
        entity_id:
          type: string
          description: A unique id for the alert.If not provided, the Zenduty API will create one. Maximum length is 32 characters
        payload:
          type: object
          description: A JSON payload containing additional information about the alert
        images: 
          type: array
          items:
            $ref: '#/components/schemas/EventImage'
        urls:
          type: array
          items:
            $ref: '#/components/schemas/EventUrl'        
    NewIncident:
      type: object
      description: Custom payload for new incident
      properties:
        service: 
          type: string
          description: Service to which the incident is attached. This field is required
        title:
          type: string
          description: This becomes the incident title. This field is required.
        summary:
          type: string
          description: This is the incident summary
        urgency:
          type: integer
          description: 1 for high, 0 for low
        escalation_policy:
          type: string
          description:  Unique ID of the escalation policy of the team
    EP_target:
      type: object
      properties:
        target_type:
          type: integer
        target_id: 
          type: string
    EP_rules:
      type: object
      properties:
        delay:
          type: integer
          default: 0
        target:
          $ref: '#/components/schemas/EP_target'
        position:
          type: integer
        unique_id:
          type: string
    EP:
      type: object
      description: Payload for escalation policies
      properties:
        name:
          type: string
          description: Name of the Escalation policy
          example: Default Escalation Policy
        summary:
          type: string
          description: Summary of the EP
          example: This is the default escalation policy of the team
        description:
          type: string
          description: Description of the EP
        rules:
          $ref: '#/components/schemas/EP_rules'
        unique_id:
          type: string
        team:
          type: string
          description: Team ID
    Restriction:
      type: object
      description: Payload of a Schedule Restriction
      properties:
        duration:
          type: integer
          description: Duration of Restriction
        start_day_of_week:
          type: integer
          description: Day of the week. Takes integer values from 0 to 6 (inclusive)
          minimum: 0
          maximum: 6
        start_time_of day:
          type: string
          description: Time of the day
          example: 21:00:00
        unique_id:
          type: string
          description: Unique ID of the restriction
    ScheduleUser:
      type: object
      description: Payload of a User attached to the schedule
      properties:
        user: 
          type: string
          description: User ID of the user
        position:
          type: integer
          description: Position in the rotation
        unique_id: 
          type: string
          description: unique ID of the User in the layer
    Layer:
      type: object
      description: Payload of a Schedule Layer
      properties:
        name: 
          type: string
          description: name of the layer
        shift_length:
          type: integer
          description: Length of shift
        restrictions: 
          $ref: '#/components/schemas/Restriction'
        rotation_start_time:
          type: string
          format: date-time
          description: start time of the shift
        rotation_end_time:
          type: string
          format: date-time
          description: End time of the shift
        restriction_type:
          type: integer
          minimum: 0
          maximum: 2
          description: 0 for no restriction, 1 for daily restrictions, 2 for weekly restrictions
        is_active:
          type: boolean
          default: true
        last_edited:
          type: string
          format: date-time
        unique_id:
          type: string
          description: unique ID of the layer
        users: 
          $ref: '#/components/schemas/ScheduleUser'
    Roles:      
      type: object
      description:  Rank of the user
      properties:
        rank:
          type: integer
          example:  5
        role_id:  
          type: string
          description:  Unique ID of the role

    Schedule:
      type: object
      description: Payload of a Schedule
      properties:
        name:
          type: string
          description: Name of the Schedule
        summary:
          type: string
          description: Summary of the Schedule
        description:
          type: string
          description: Description of the Schedule
        time_zone:
          type: string
          description: Time Zone of the Schedule
          example: Asia/Calcutta
        team:
          type: string
          description: Team ID
        layers: 
          $ref: '#/components/schemas/Layer'
        unique_id: 
          type: string
          description: Unique ID of the schedule

    Rolesresp:
      type: object
      description: Roles in a team
      properties: 
        unique_id: 
          type: string 
          description: unique ID of the Role
        team: 
          type: string
          description: Unique ID of the team
        title:
          type: string
          description: Title/Name of the Role
        description:
          type: string
          description: Description of the role
        creation_date: 
          type: string
          format: date-time
          description: Date of creation of the Role
        rank:
          type: integer
          description: Rank of the role in the hierarchy

    Rolespay:
      type: object
      description:  Payload to create a team Role
      properties: 
        title:  
          type: string
          description:  Title/Name of the Role
        description:
          type: string
          description:  Description of the Role
        rank:
          type: integer
          description:  Rank of the Role ranging from 1 to 10, 1 being the highest and 10 being the lowest.

    Rolesref:
      type: object
      description: Response after creating the role successfully
      properties:
        unique_id:
          type: string
          description:  Description of the role
        title:
          type: string
          description:  Title/Name of the Role
        description:
          type: string
          description:  Description of the Role
        creation_date:
          type: string
          format: date-time
          description:  Date and time of creation of the role
        rank:
          type: integer
          description:  Rank of the role

    Tagsresp:
      type: object
      description:  Tags in a team
      properties:
        unique_id:
          type: string
          description:  Unique ID of the Tag
        team: 
          type: string
          description:  Description of the Tag
        name:
          type: string
          description:  Name/Title of the Tag
        creation_date:
          type: string
          format: date-time
          description:  Date and Time if creation of the Tag
        color:
          type: string
          description:  Color of the Tag

    Tagspay:
      type: object
      description:  Payload to create a new Tag for a Team
      properties:
        name: 
          type: string
          description:  Title/Name of the Tag
        color:
          type: string
          description:  Color of the tag

    Tagsref:
      type: object
      description: Response after creating the Tag successfully
      properties:
        unique_id:
          type: string
          description:  Unique ID of the Tag
        name:
          type: string
          description:  Name/Title of the Tag
        creation_date:
          type: string
          format: date-time
          description:  Date and Time of creation of the Tag
        color: 
          type: string
          description:  Color of the Tag
        team:
          type: integer
          description:  Number of the team the Tag is made for

    TaskTemplatesresp:
      type: object
      description:  Available Task Templates
      properties:
        unique_id: 
          type: string
          description:  Unique ID of the Task Template
        team:
          type: string
          description:  Unique ID of the team of the team for which the teask template is being made
        name:
          type: string
          description:  Name/Title of the Task Template
        creation_date:
          type: string
          format: date-time
          description:  Date and Time of creation of the Task Template
        summary:
          type: string
          description:  Summary of the Task Template
        due_immediately:
          type: integer
          description: If the task template is due immediately
    
    TaskTemplatespay:
      type: object
      description: Payload to create a new Task Template
      properties:
        name: 
          type: string
          description:  Name/Title of the Task Template
        summary:
          type: string
          description:  Summary of the Task Template
    
    TaskTemplatesref:
      type: object
      description: Response after creatin a task template successfully
      properties:
        unique_id: 
          type: string
          description: Unique ID of the Task Template 
        name:
          type: string
          description:  Name/Title of the Task Template
        creation_date:
          type: string
          format: date-time
          description:  Date and Time of creation of the Task Template
        summary:
          type: string
          description:  Summary of the Task Template
        due_immediately:
          type: integer
          description:  If its immediately due
        
    onCall:
      type: object
      description: On Call
      properties:
        escalation_policies:
          $ref: '#/components/schemas/lesEscPolicies'
        team:
          $ref: '#/components/schemas/lesTeam'
        user:
          $ref: '#/components/schemas/User'

    lesEscPolicies:
      type: object
      description: Escalation Policy details for on call.
      properties:
        name:
          description: name of the escalation policy
          type: string
        summary:
          description: summary for the escaltion policy
          type: string
        description: 
          description: description of the escalation policy
          type: string
        unique_id:
          description: Unique ID of the Escalation Policy
          type: string
        repeat_policy: 
          description: details about the repetition of the escalation policy
          type: integer
          
    lesTeam:
      type: object
      description: lesser details of the team for On Call details
      properties:
        unique_id:
          description: Unique ID of the team
          type: string
        name:
          description: Name of the team
          type: string

  headers:
    ExpiresAfter:
      description: date in UTC when token expires
      schema:
        type: string
        format: date-time
        
  # Security scheme definitions that can be used across the specification.
  securitySchemes:
    bearerAuth:  # security definition name (you can name it as you want)
      type: http
      scheme: bearer
      bearerFormat: Token